{"metadata":{"kernelspec":{"name":"python3","display_name":"Python 3","language":"python"},"language_info":{"name":"python","version":"3.10.14","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"colab":{"provenance":[]},"kaggle":{"accelerator":"nvidiaTeslaT4","dataSources":[{"sourceId":9961837,"sourceType":"datasetVersion","datasetId":6127603},{"sourceId":9971368,"sourceType":"datasetVersion","datasetId":6134590}],"dockerImageVersionId":30786,"isInternetEnabled":true,"language":"python","sourceType":"script","isGpuEnabled":true}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"# %% [code] {\"id\":\"e3fsgI-rZIt_\",\"executionInfo\":{\"status\":\"ok\",\"timestamp\":1732096865366,\"user_tz\":-420,\"elapsed\":4316,\"user\":{\"displayName\":\"Reihan Alif\",\"userId\":\"10079656721015725973\"}},\"execution\":{\"iopub.status.busy\":\"2024-11-23T11:36:00.756551Z\",\"iopub.execute_input\":\"2024-11-23T11:36:00.757069Z\",\"iopub.status.idle\":\"2024-11-23T11:36:11.083623Z\",\"shell.execute_reply.started\":\"2024-11-23T11:36:00.757029Z\",\"shell.execute_reply\":\"2024-11-23T11:36:11.082891Z\"}}\nimport os\nimport numpy as np\nimport tensorflow as tf\nimport matplotlib.pyplot as plt\nfrom tensorflow.keras.applications import InceptionV3 # 91 %\nfrom tensorflow.keras.applications import ResNet50 # 20 %\nfrom tensorflow.keras.applications import VGG16 # 52 %\nfrom tensorflow.keras import layers, models\n\n# %% [code] {\"id\":\"nhaO5Nc5TcxG\",\"executionInfo\":{\"status\":\"ok\",\"timestamp\":1732096869080,\"user_tz\":-420,\"elapsed\":3716,\"user\":{\"displayName\":\"Reihan Alif\",\"userId\":\"10079656721015725973\"}},\"outputId\":\"8351068e-7d0e-4dcf-de00-d14cd86a786e\",\"execution\":{\"iopub.status.busy\":\"2024-11-23T11:36:11.085037Z\",\"iopub.execute_input\":\"2024-11-23T11:36:11.085499Z\",\"iopub.status.idle\":\"2024-11-23T11:36:14.111011Z\",\"shell.execute_reply.started\":\"2024-11-23T11:36:11.085472Z\",\"shell.execute_reply\":\"2024-11-23T11:36:14.110061Z\"}}\nbase_model = InceptionV3(\n    weights='imagenet',\n    include_top=False,\n    input_shape=(224, 224, 3)\n)\n\n# Freeze/Unfreeze the base model (to use pre-trained features)\nbase_model.trainable = True\nfor layer in base_model.layers:\n    layer.trainable = False\n\n# %% [code] {\"id\":\"sqML9WLDTomG\",\"executionInfo\":{\"status\":\"ok\",\"timestamp\":1732096869080,\"user_tz\":-420,\"elapsed\":6,\"user\":{\"displayName\":\"Reihan Alif\",\"userId\":\"10079656721015725973\"}},\"execution\":{\"iopub.status.busy\":\"2024-11-23T11:36:14.112096Z\",\"iopub.execute_input\":\"2024-11-23T11:36:14.112384Z\",\"iopub.status.idle\":\"2024-11-23T11:36:14.135608Z\",\"shell.execute_reply.started\":\"2024-11-23T11:36:14.112357Z\",\"shell.execute_reply\":\"2024-11-23T11:36:14.134771Z\"}}\nfrom keras.optimizers import Adam\nfrom keras.optimizers import SGD\n\n# Build model\nmodel = models.Sequential([\n    base_model,\n    layers.GlobalAveragePooling2D(),\n    layers.Dropout(0.5),\n    layers.Dense(128, activation='relu'),\n    layers.BatchNormalization(),\n    layers.Dropout(0.5),\n    layers.Dense(6, activation='softmax')\n])\n\n# optimizer=Adam\nmodel.compile(\n    optimizer='SGD',\n    loss='categorical_crossentropy',\n    metrics=['accuracy']\n)\n\n# %% [code] {\"id\":\"ObFTp9NbZXj9\",\"execution\":{\"iopub.status.busy\":\"2024-11-23T11:36:14.136662Z\",\"iopub.execute_input\":\"2024-11-23T11:36:14.136910Z\",\"iopub.status.idle\":\"2024-11-23T11:36:14.140684Z\",\"shell.execute_reply.started\":\"2024-11-23T11:36:14.136887Z\",\"shell.execute_reply\":\"2024-11-23T11:36:14.139864Z\"}}\nDATA_DIR = '/kaggle/input/og-sampah/Sorted_dataset'\n\n# %% [code] {\"id\":\"WJd3pdLJZmav\",\"outputId\":\"c332720e-4836-4979-8010-dc5121a478d8\",\"executionInfo\":{\"status\":\"ok\",\"timestamp\":1732088425907,\"user_tz\":-420,\"elapsed\":9176,\"user\":{\"displayName\":\"Reihan Alif\",\"userId\":\"10079656721015725973\"}},\"execution\":{\"iopub.status.busy\":\"2024-11-23T11:36:14.142352Z\",\"iopub.execute_input\":\"2024-11-23T11:36:14.142602Z\",\"iopub.status.idle\":\"2024-11-23T11:36:15.699003Z\",\"shell.execute_reply.started\":\"2024-11-23T11:36:14.142578Z\",\"shell.execute_reply\":\"2024-11-23T11:36:15.698171Z\"}}\nfig, axes = plt.subplots(1, 6, figsize=(18, 3))\nfig.suptitle('Sampah', fontsize=16)\n\n# Plot one image from the first 6 waste\nfor ii, waste in enumerate(['Besi' , 'Kaca', 'Kardus', 'Kertas', 'Plastik', 'Sisa Makanan']):\n    dir = f'/kaggle/input/og-sampah/Sorted_dataset/{waste}'\n    img = tf.keras.preprocessing.image.load_img(dir+'/'+os.listdir(dir)[0])\n    axes[ii].imshow(img)\n    axes[ii].set_title(f'Example of waste {waste}')\n\n# %% [code] {\"id\":\"t3lv4VJxTswG\",\"outputId\":\"dd72207f-45a1-4fcb-b07a-9ff629cf504e\",\"executionInfo\":{\"status\":\"ok\",\"timestamp\":1732088425908,\"user_tz\":-420,\"elapsed\":7,\"user\":{\"displayName\":\"Reihan Alif\",\"userId\":\"10079656721015725973\"}},\"execution\":{\"iopub.status.busy\":\"2024-11-23T11:36:15.700004Z\",\"iopub.execute_input\":\"2024-11-23T11:36:15.700253Z\",\"iopub.status.idle\":\"2024-11-23T11:36:32.841556Z\",\"shell.execute_reply.started\":\"2024-11-23T11:36:15.700228Z\",\"shell.execute_reply\":\"2024-11-23T11:36:32.840755Z\"}}\nfrom tensorflow.keras.preprocessing.image import ImageDataGenerator\nfrom sklearn.model_selection import train_test_split\n\n# Load dataset (contoh untuk image data)\ndata_gen = ImageDataGenerator(rescale=1./255)\ndata_flow = data_gen.flow_from_directory(\n    directory=DATA_DIR,\n    target_size=(224,224),\n    batch_size=16,\n    class_mode='categorical',\n    shuffle=True\n)\n\n# Ekstraksi data dan label dari generator\ndata, labels = [], []\nfor i in range(len(data_flow)):\n    x, y = data_flow[i]\n    data.extend(x)\n    labels.extend(y)\ndata = np.array(data)\nlabels = np.array(labels)\n\n# Membagi dataset menjadi train dan validation\nX_train, X_val, y_train, y_val = train_test_split(\n    data, labels, test_size=0.2, random_state=42, stratify=np.argmax(labels, axis=1)\n)\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2024-11-23T11:36:32.842760Z\",\"iopub.execute_input\":\"2024-11-23T11:36:32.843537Z\",\"iopub.status.idle\":\"2024-11-23T11:39:24.748406Z\",\"shell.execute_reply.started\":\"2024-11-23T11:36:32.843486Z\",\"shell.execute_reply\":\"2024-11-23T11:39:24.747255Z\"}}\nhistory = model.fit(\n    X_train,\n    y_train,\n    validation_data=(X_val, y_val),\n    epochs=50,\n    batch_size=16\n)\n\n# %% [code] {\"id\":\"GBLoi1_ZUeJm\",\"outputId\":\"72789e42-3cc7-40f0-cc87-e1feff3334bf\",\"executionInfo\":{\"status\":\"error\",\"timestamp\":1732089578518,\"user_tz\":-420,\"elapsed\":1127186,\"user\":{\"displayName\":\"Reihan Alif\",\"userId\":\"10079656721015725973\"}},\"execution\":{\"iopub.status.busy\":\"2024-11-23T11:39:24.750209Z\",\"iopub.execute_input\":\"2024-11-23T11:39:24.750798Z\",\"iopub.status.idle\":\"2024-11-23T11:39:25.188551Z\",\"shell.execute_reply.started\":\"2024-11-23T11:39:24.750754Z\",\"shell.execute_reply\":\"2024-11-23T11:39:25.187386Z\"}}\nacc = history.history['accuracy']\nval_acc = history.history['val_accuracy']\nloss = history.history['loss']\nval_loss = history.history['val_loss']\n\nepochs = range(len(acc))\n\nplt.figure(figsize=(12, 6))\nplt.subplot(1, 2, 1)\nplt.plot(epochs, acc, 'r', label='Training Accuracy')\nplt.plot(epochs, val_acc, 'b', label='Validation Accuracy')\nplt.title('Training and Validation Accuracy')\nplt.legend()\n\nplt.subplot(1, 2, 2)\nplt.plot(epochs, loss, 'r', label='Training Loss')\nplt.plot(epochs, val_loss, 'b', label='Validation Loss')\nplt.title('Training and Validation Loss')\nplt.legend()\n\nplt.show()\n\n# %% [code] {\"id\":\"nfJbueBCzNdc\",\"execution\":{\"iopub.status.busy\":\"2024-11-23T11:39:25.192961Z\",\"iopub.execute_input\":\"2024-11-23T11:39:25.193254Z\",\"iopub.status.idle\":\"2024-11-23T11:39:44.049808Z\",\"shell.execute_reply.started\":\"2024-11-23T11:39:25.193209Z\",\"shell.execute_reply\":\"2024-11-23T11:39:44.048809Z\"}}\nfrom sklearn.metrics import confusion_matrix, ConfusionMatrixDisplay\n\n# Prediksi data validation\ny_pred = model.predict(X_val)\ny_pred_classes = np.argmax(y_pred, axis=1)\ny_true_classes = np.argmax(y_val, axis=1)\n\n# Membuat confusion matrix\ncm = confusion_matrix(y_true_classes, y_pred_classes)\n\n# Visualisasi confusion matrix\ndisp = ConfusionMatrixDisplay(confusion_matrix=cm, display_labels=data_flow.class_indices.keys())\ndisp.plot(cmap='Blues', xticks_rotation=45)\nplt.title(\"Confusion Matrix\")\nplt.show()\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2024-11-23T11:41:15.269806Z\",\"iopub.execute_input\":\"2024-11-23T11:41:15.270132Z\",\"iopub.status.idle\":\"2024-11-23T11:41:15.480930Z\",\"shell.execute_reply.started\":\"2024-11-23T11:41:15.270101Z\",\"shell.execute_reply\":\"2024-11-23T11:41:15.480215Z\"}}\nimport numpy as np\nfrom tensorflow.keras.preprocessing import image\nimport matplotlib.pyplot as plt\nimport tensorflow as tf\n\n# Fungsi untuk prediksi satu gambar dan menampilkan hasil\ndef predict_and_display(model, img_path, target_size, class_names):\n    # Load gambar\n    img = image.load_img(img_path, target_size=target_size)\n    \n    # Preprocessing: Ubah menjadi array dan normalisasi\n    img_array = image.img_to_array(img)\n    img_array = np.expand_dims(img_array, axis=0)  # Tambahkan batch dimension\n    img_array /= 255.0  # Normalisasi (sesuai preprocessing saat training)\n    \n    # Prediksi\n    predictions = model.predict(img_array)\n    predicted_class = np.argmax(predictions[0])  # Indeks kelas prediksi tertinggi\n    \n    # Plot gambar input dan label prediksi\n    plt.figure(figsize=(5, 5))\n    plt.imshow(img)\n    plt.axis('off')  # Hilangkan sumbu\n    plt.title(f\"Predicted: {class_names[predicted_class]} ({predictions[0][predicted_class]:.2f})\", fontsize=14)\n    plt.show()\n\n# Contoh pemanggilan fungsi\nimage_path = \"/kaggle/input/sampahio/sampahIO_fix/validation/Besi/metal_1447.jpg\"  # Path ke gambar yang ingin diprediksi\ntarget_size = (224, 224)  # Ukuran input model\nclass_names = ['Besi' , 'Kaca', 'Kardus', 'Kertas', 'Plastik', 'Sisa Makanan']  # Sesuaikan label\n\npredict_and_display(model, image_path, target_size, class_names)\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2024-11-23T11:41:26.257302Z\",\"iopub.execute_input\":\"2024-11-23T11:41:26.257667Z\",\"iopub.status.idle\":\"2024-11-23T11:41:26.958268Z\",\"shell.execute_reply.started\":\"2024-11-23T11:41:26.257638Z\",\"shell.execute_reply\":\"2024-11-23T11:41:26.957351Z\"}}\nimport joblib\n\n# Simpan model\njoblib.dump(model, 'model_inceptionv3.joblib')\nprint(\"Model berhasil disimpan sebagai 'model_inceptionv3.joblib'\")\n\n# %% [code]\n","metadata":{"_uuid":"a0b5e11b-c9d9-40a1-9ea6-f4a99d4a0973","_cell_guid":"3f316f81-adc0-443f-b96a-25e6ed359b2e","trusted":true,"collapsed":false,"jupyter":{"outputs_hidden":false}},"outputs":[],"execution_count":null}]}